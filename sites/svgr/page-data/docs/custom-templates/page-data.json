{
    "componentChunkName": "component---node-modules-smooth-doc-src-templates-doc-js",
    "path": "/docs/custom-templates/",
    "result": {"data":{"mdx":{"fields":{"pageType":"doc","title":"Custom Templates","editLink":"https://github.com/gregberge/svgredit/main/website/pages/docs/custom-templates.mdx"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"section\": \"Advanced\",\n  \"title\": \"Custom Templates\",\n  \"order\": 6\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"custom-templates\"\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#custom-templates\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"1em\",\n    width: \"1em\",\n    viewBox: \"0 0 16 16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Custom Templates\"), mdx(\"p\", null, \"Customize template to personalize the result React component.\"), mdx(\"carbon-ad\", null), mdx(\"h2\", {\n    \"id\": \"custom-component-template\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#custom-component-template\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"1em\",\n    width: \"1em\",\n    viewBox: \"0 0 16 16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Custom Component template\"), mdx(\"p\", null, \"A custom template takes place in a file that exports a \\\"template function\\\".\"), mdx(\"p\", null, \"This function is called in a babel plugin: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"babel-plugin-transform-svg-component\"), \" and must returns a Babel AST. If you are not familiar with all Babel stuff, you should read \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/jamiebuilds/babel-handbook\"\n  }, \"this guide\"), \".\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"variables\"), \": All pre-compiled variables by SVGR\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"componentName\"), \": The component name\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"props\"), \": The properties\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"interfaces\"), \": All necessary interfaces (typescript)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"imports\"), \": All necessary imports\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"exports\"), \": The export of the component\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"jsx\"), \": The JSX part of the component\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"context\"), \":\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"tpl\"), \": A built-in template-tag function to create template\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"options\"), \": Options passed to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"babel-plugin-transform-svg-component\"))))), mdx(\"p\", null, \"The following template is the default template used by SVGR. It is a good idea to start with it:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const template = (variables, { tpl }) => {\\n  return tpl`\\n${variables.imports};\\n\\n${variables.interfaces};\\n\\nconst ${variables.componentName} = (${variables.props}) => (\\n  ${variables.jsx}\\n);\\n \\n${variables.exports};\\n`\\n}\\n\\nmodule.exports = template\\n\")), mdx(\"p\", null, \"Let's try something very simple. You want to add some PropTypes to your component:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const propTypesTemplate = (\\n  { imports, interfaces, componentName, props, jsx, exports },\\n  { tpl },\\n) => {\\n  return tpl`${imports}\\nimport PropTypes from 'prop-types';\\n${interfaces}\\n\\nfunction ${componentName}(${props}) {\\n  return ${jsx};\\n}\\n\\n${componentName}.propTypes = {\\n  title: PropTypes.string,\\n};\\n\\n${exports}\\n  `\\n}\\n\\nmodule.exports = propTypesTemplate\\n\")), mdx(\"p\", null, \"As you can see it is very natural, we just add code and use AST parts in the template.\"), mdx(\"h3\", {\n    \"id\": \"use-with-cli\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#use-with-cli\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"1em\",\n    width: \"1em\",\n    viewBox: \"0 0 16 16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Use with CLI\"), mdx(\"p\", null, \"You can use component template in the CLI:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"npx @svgr/cli --template template.js -- my-icon.svg\\n\")), mdx(\"h3\", {\n    \"id\": \"use-with-config\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#use-with-config\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"1em\",\n    width: \"1em\",\n    viewBox: \"0 0 16 16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Use with config\"), mdx(\"p\", null, \"Specify the template in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".svgrrc.js\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"// .svgrrc.js\\nmodule.exports = {\\n  template: require('./my-template'),\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"custom-index-template\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#custom-index-template\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"1em\",\n    width: \"1em\",\n    viewBox: \"0 0 16 16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Custom index template\"), mdx(\"p\", null, \"When you use the CLI with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--out-dir\"), \" option, an index file is automatically generated.\"), mdx(\"p\", null, \"The customization is the same, a file that exports a function:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const path = require('path')\\n\\nfunction defaultIndexTemplate(filePaths) {\\n  const exportEntries = filePaths.map((filePath) => {\\n    const basename = path.basename(filePath, path.extname(filePath))\\n    const exportName = /^\\\\d/.test(basename) ? `Svg${basename}` : basename\\n    return `export { default as ${exportName} } from './${basename}'`\\n  })\\n  return exportEntries.join('\\\\n')\\n}\\n\\nmodule.exports = defaultIndexTemplate\\n\")), mdx(\"h3\", {\n    \"id\": \"use-with-cli-1\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#use-with-cli-1\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"1em\",\n    width: \"1em\",\n    viewBox: \"0 0 16 16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Use with CLI\"), mdx(\"p\", null, \"You can use component template in the CLI:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"npx @svgr/cli --index-template index-template.js -- my-icon.svg\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#custom-templates","title":"Custom Templates","items":[{"url":"#custom-component-template","title":"Custom Component template","items":[{"url":"#use-with-cli","title":"Use with CLI"},{"url":"#use-with-config","title":"Use with config"}]},{"url":"#custom-index-template","title":"Custom index template","items":[{"url":"#use-with-cli-1","title":"Use with CLI"}]}]}]}}},"pageContext":{"id":"da8fe671-5b28-5c0d-b3aa-29347f0d8a0f"}},
    "staticQueryHashes": ["1122327541","1339625561","148928582","2140385554","2635151918","3442269102","4275725850"]}